.. _powervm_inventory_module:


powervm_inventory -- HMC-based inventory source for Power Systems
=================================================================

.. contents::
   :local:
   :depth: 1


Synopsis
--------

This plugin utilizes HMC APIs to build a dynamic inventory of defined partitions (LPAR, VIOS). Inventory sources must be structured as name.power_hmc.yml or name.power_hmc.yaml.

To create a usable Ansible host for a given LPAR, the ip or hostname of the LPAR must be exposed through the HMC in some way. Currently there are only 2 such sources supported by this tool, an RMC ip address or the name of the LPAR must be a valid hostname.

Valid LPAR/VIOS properties that can be used for groups, keyed groups, filters, unknown partition identification, and composite variables can be found in the HMC REST API documentation. By default, valid properties include those listed as "Quick Properties", but if `advanced_fields` are enabled you may use properties included in the "Advanced" group as well.



Requirements
------------
The below requirements are needed on the host that executes this module.

- Python >= 3



Parameters
----------

  hmc_hosts (True, dict, None)
    A dictionary of hosts and their associated usernames and passwords.


  filters (optional, any, {})
    A key value pair for filtering by various LPAR/VIOS attributes. Only results matching the filter will be included in the inventory.


  compose (optional, dict, {})
    Create vars from jinja2 expressions.


  groups (optional, dict, {})
    Add hosts to group based on Jinja2 conditionals.


  keyed_groups (optional, list, [])
    Add hosts to group based on the values of a variable.


  exclude_ip (optional, list, [])
    A list of IP addresses to exclude from the inventory. This will be compared to the RMC ip address specified in the HMC. Currently, no hostname lookup is performed, so only ip addresses that match the RMC ip address specified in the HMC will be exlcuded.


  exclude_lpar (optional, list, [])
    A list of partitions (LPAR, VIOS) to exclude by partition name.


  exclude_system (optional, list, [])
    A list of HMC managed systems whose partitions (LPAR, VIOS) will be excluded from the dynamic inventory.


  ansible_display_name (optional, str, lpar_name)
    By default, partitions names will be used as the name displayed by Ansible in output. If you wish this to display the ip address instead you may set this to "ip".


  ansible_host_type (optional, str, ip)
    Determines if the ip address or the LPAR name will be used as the "ansible_host" variable in playbooks.


  advanced_fields (optional, bool, False)
    Allows for additional LPAR/VIOS properties to be used for the purposes of grouping and filtering.

    Retrieving these properties requires a significantly slower call to HMC APIs. Depending on the size of your environment, it could increase dynamic inventory generation run time dramatically.


  group_by_managed_system (optional, bool, True)
    Creates a grouping of partitions by managed system name. This is enabled by default.


  identify_unknown_by (optional, str, omit)
    Allows you to include partitions unable to be automatically detected as a valid Ansible target.

    By default, partitions without ip's are ommited from the inventory. This is not be the case in the event you have lpar_name set for ansible_host_type. If not, omitted partitions will be added to a group called "unknown" and will can be identified by any LPAR property of your choosing (PartitionName or UUID are common identifiers).

    If you do not omit unknown partitions, you may run into issues targetting groups that include them. To avoid this you can specify a host pattern in a playbooks such as `targetgroup:!unknown`. This will your playbook to run against all known hosts in your target group.









Examples
--------

.. code-block:: yaml+jinja

    
    # The most minimal example, targetting only a single HMC
    plugin: ibm.power_hmc.powervm_inventory
    hmc_hosts:
      "hmc_url1":
        user: user
        password: password
    # Target multiple HMC hosts and only add running partitions to the inventory
    plugin: ibm.power_hmc.powervm_inventory
    hmc_hosts:
      "hmc_url1":
        user: user
        password: password
      "hmc_url2":
        user: user
        password: password
    filters:
        PartitionState: 'running'

    # Generate an inventory including all running partitions and also create a group allowing us to target AIX 7.2 specifically
    plugin: ibm.power_hmc.powervm_inventory
    hmc_hosts:
      "hmc_url1":
        user: user
        password: password
      "hmc_url2":
        user: user
        password: password
    filters:
        PartitionState: 'running'
    groups:
        AIX_72: "'7.2' in OperatingSystemVersion"

    # Generate an inventory of running partitions and group them by PartitionType with a prefix of type_
    # Groups will be created will resemble "type_Virtual_IO_Server", "type_AIX_Linux", etc.
    # Additionally, include the following variables as host_vars for a given target host: CurrentMemory, OperatingSystemVersion, PartitionName
    plugin: ibm.power_hmc.powervm_inventory
    hmc_hosts:
      "hmc_url1":
        user: user
        password: password
      "hmc_url2":
        user: user
        password: password
    filters:
        PartitionState: 'running'
    keyed_groups:
      - prefix: type
        key: PartitionType
    compose:
      current_memory: CurrentMemory
      os: OperatingSystemVersion
      name: PartitionName

    ## Generate an inventory that excludes partitions by ip, name, or the name of managed system on which they run
    plugin: ibm.power_hmc.powervm_inventory
    hmc_hosts:
      "hmc_url1":
        user: user
        password: password
    exclude_ip:
        - 10.0.0.44
        - 10.0.0.46
    exclude_lpar:
        - aixlparnameX1
        - aixlparnameX2
        - vioslparnameX1
        - vioslparnameX2
    exclude_system:
        - Frame1-XXX-WWWWWW
        - Frame2-XXX-WWWWWW





Status
------





Authors
~~~~~~~

- Torin Reilly (@torinreilly)
- Michael Cohoon (@mtcohoon)
- Ozzie Rodriguez

